apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'androidx.navigation.safeargs.kotlin'
apply plugin: 'kotlin-kapt'
kapt {
    correctErrorTypes = true
    mapDiagnosticLocations = true
}
apply plugin: 'realm-android'
apply plugin: 'kotlin-android-extensions'
androidExtensions {
    experimental = true
}

android {

    compileSdkVersion buildConfig.compileSdk

    defaultConfig {
        applicationId "app.soulcramer.arn"
        minSdkVersion buildConfig.minSdk
        targetSdkVersion buildConfig.targetSdk
        versionCode 1
        versionName "0.0.1"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        resConfigs "en", "fr"
    }

    signingConfigs {
        config {
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storePassword 'android'
            storeFile file('../keystore/debug.keystore')
        }
        release {
            keyAlias ''
            keyPassword ''
            storeFile file('../keystore/release.keystore')
            storePassword ''
        }
    }

    dataBinding {
        enabled = true
    }

    flavorDimensions "dev"
    productFlavors {
        prod {
            dimension "dev"
        }

        dev {
            dimension "dev"
            // Compile just these resources
            resConfigs "en", "fr", "xxhdpi"
            // Forbid crashlytics to create a unique crash id on each build
            ext.alwaysUpdateBuildId = false
            // Disable crashlytics (code gen, etcâ€¦)
            ext.enableCrashlytics = false
            // Disable png crushing (reducing size of png)
            aaptOptions.cruncherEnabled false
            // Disable split
            splits.abi.enable = false
            splits.density.enable = false
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        // Exclude AndroidX version files
        exclude 'META-INF/*.version'
        // Exclude consumer proguard files
        exclude 'META-INF/proguard/*'
        // Exclude the Firebase/Fabric/other random properties files
        exclude '/*.properties'
        exclude 'fabric/*.properties'
        exclude 'META-INF/*.properties'
    }

    buildTypes {
        debug {
            shrinkResources true
            minifyEnabled true
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
}

dependencies {
    // Kotlin JDK
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${versions.kotlin}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.coroutines}"


    // AndroidX
    implementation "androidx.lifecycle:lifecycle-extensions:${versions.androidx.lifecycle}"
    implementation "androidx.navigation:navigation-fragment-ktx:${versions.androidx.navigation}"
    implementation "androidx.navigation:navigation-ui-ktx:${versions.androidx.navigation}"
    implementation "androidx.recyclerview:recyclerview:${versions.androidx.recyclerview}"
    implementation "com.google.android.material:material:${versions.material}"
    implementation "androidx.constraintlayout:constraintlayout:${versions.androidx.constraint_layout}"
    implementation "androidx.core:core-ktx:${versions.androidx.core_ktx}"
    implementation "androidx.room:room-runtime:${versions.androidx.room}"
    kapt "androidx.room:room-compiler:${versions.androidx.room}"
    implementation "androidx.room:room-ktx:${versions.androidx.room}"
    implementation "androidx.emoji:emoji:${versions.androidx.emoji}"
    kapt "androidx.databinding:compiler:3.2.0-alpha11"

    implementation "com.jakewharton.threetenabp:threetenabp:1.2.0"
    implementation "org.threeten:threetenbp:1.3.8:no-tzdb"

    // DI
    implementation "org.koin:koin-core:${versions.koin}"
    implementation "org.koin:koin-android:${versions.koin}"
    implementation "org.koin:koin-androidx-scope:${versions.koin}"
    implementation "org.koin:koin-androidx-viewmodel:${versions.koin}"

    implementation "com.github.Zhuinden:realm-monarchy:${versions.monarchy}"
    kapt 'dk.ilios:realmfieldnameshelper:1.1.1'

    implementation "com.mikepenz:fastadapter:3.2.7"
    implementation "com.mikepenz:fastadapter-commons:3.2.7"
    implementation "com.mikepenz:fastadapter-extensions-expandable:3.2.7"
    implementation "com.mikepenz:fastadapter-extensions:3.2.7"

    // Leak Canary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:${versions.leakcanary}"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:${versions.leakcanary}"

    implementation "com.github.bumptech.glide:glide:${versions.glide}"
    implementation "com.github.bumptech.glide:annotations:${versions.glide}"
    kapt "com.github.bumptech.glide:compiler:${versions.glide}"

    implementation "com.squareup.retrofit2:retrofit:${versions.retrofit}"
    implementation "com.squareup.retrofit2:converter-gson:${versions.retrofit}"
    implementation "com.squareup.retrofit2:retrofit-mock:${versions.retrofit}"
    implementation "com.squareup.okhttp3:logging-interceptor:${versions.okhttp}"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2"

    implementation "com.github.bumptech.glide:okhttp3-integration:${versions.glide}"
    implementation "com.github.ajalt:timberkt:${versions.timberkt}"

}
