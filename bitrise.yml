---
format_version: '7'
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git
project_type: android
trigger_map:
  - push_branch: "*"
    workflow: primary
  - pull_request_source_branch: "*"
    workflow: primary
    pull_request_target_branch: development
workflows:
  deploy:
    description: |
      ## How to get a signed APK

      This workflow contains the **Sign APK** step. To sign your APK all you have to do is to:

      1. Click on **Code Signing** tab
      1. Find the **ANDROID KEYSTORE FILE** section
      1. Click or drop your file on the upload file field
      1. Fill the displayed 3 input fields:
       1. **Keystore password**
       1. **Keystore alias**
       1. **Private key password**
      1. Click on **[Save metadata]** button

      That's it! From now on, **Sign APK** step will receive your uploaded files.

      ## To run this workflow

      If you want to run this workflow manually:

      1. Open the app's build list page
      2. Click on **[Start/Schedule a Build]** button
      3. Select **deploy** in **Workflow** dropdown input
      4. Click **[Start Build]** button

      Or if you need this workflow to be started by a GIT event:

      1. Click on **Triggers** tab
      2. Setup your desired event (push/tag/pull) and select **deploy** workflow
      3. Click on **[Done]** and then **[Save]** buttons

      The next change in your repository that matches any of your trigger map event will start **deploy** workflow.
    steps:
      - activate-ssh-key@4.0.3:
          run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
      - git-clone@4.0.14: {}
      - cache-pull@2.0.1: {}
      - script@1.1.5:
          title: Do anything with Script step
      - install-missing-android-tools@2.3.5:
          inputs:
            - gradlew_path: "$PROJECT_LOCATION/gradlew"
      - change-android-versioncode-and-versionname@1.1.1:
          inputs:
            - build_gradle_path: "$PROJECT_LOCATION/$MODULE/build.gradle"
      - android-lint@0.9.6:
          inputs:
            - project_location: "$PROJECT_LOCATION"
            - module: "$MODULE"
            - variant: "$VARIANT"
      - android-unit-test@0.9.6:
          inputs:
            - project_location: "$PROJECT_LOCATION"
            - module: "$MODULE"
            - variant: "$VARIANT"
      - android-build@0.9.6:
          inputs:
            - project_location: "$PROJECT_LOCATION"
            - module: "$MODULE"
            - variant: "$VARIANT"
      - sign-apk@1.2.4:
          run_if: '{{getenv "BITRISEIO_ANDROID_KEYSTORE_URL" | ne ""}}'
      - deploy-to-bitrise-io@1.3.19: {}
      - cache-push@2.1.1: {}
  primary:
    steps:
      - activate-ssh-key:
          run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
      - git-clone: {}
      - cache-pull: {}
      - install-missing-android-tools@2.3.5:
          inputs:
            - gradlew_path: "$PROJECT_LOCATION/gradlew"
      - avd-manager@0.9.2: {}
      - script:
          inputs:
            - content: |-
                #!/usr/bin/env bash
                # fail if any commands fails
                set -e
                # debug log
                set -x

                bundle install
                ./gradlew ktlintCheck runChecksForDanger
          title: Run ktlint
      - script:
          inputs:
            - runner_bin: python
            - is_debug: 'yes'
            - content: "./scripts/danger/mergeKtlint.py "
          title: Create ktlint merge report
      - script:
          inputs:
            - runner_bin: python
            - content: "./scripts/danger/mergeAndroidLint.py"
          title: Create Android lint report
      - script:
          title: Copy reports to deploy path
          inputs:
            - content: |-
                #!/usr/bin/env bash
                # fail if any commands fails
                set -e
                # debug log
                set -x

                # write your script here
                cp ktlint-report.xml $BITRISE_DEPLOY_DIR/ktlint-report.xml
                cp ktlint-report.xml $BITRISE_SOURCE_DIR/build/reports/ktlint/ktlint-report.xml

                cp lint-report.xml $BITRISE_DEPLOY_DIR/lint-report.xml
                cp lint-report.xml $BITRISE_SOURCE_DIR/build/reports/lint/lint-report.xml

                less /bitrise/src/build/reports/ktlint/ktlint-report.xml
                less /bitrise/src/build/reports/lint/lint-report.xml
      - script@1.1.5:
          inputs:
            - content: "#!/usr/bin/env bash\n# fail if any commands fails\nset -e\n# debug
            log\nset -x\n\n\t\n./gradlew dependencyUpdates\n\nless /bitrise/src/build/dependencyUpdates/report.txt"
          title: Check dependencies
      - script@1.1.5:
          title: Run Danger
          inputs:
            - content: |-
                #!/usr/bin/env bash
                export GIT_REPOSITORY_URL="git@github.com/soulcramer/NotifyMoe-Android-App.git"
                bundle exec danger
      - wait-for-android-emulator@1.0.4: {}
      - gradle-runner@1.9.0:
          inputs:
            - app_file_exclude_filter: |
                *unaligned.apk
                *core*.apk
                *domain*.apk
                *data*.apk
                *remote*.apk
                *cache*.apk
            - cache_level: all
            - app_file_include_filter: |
                app-debug.apk
                app-release.apk
                app-debug.aab
                app-release.aab
            - test_apk_file_include_filter: |-
                *Test*.apk
                app-debug*Test*.apk
                app-release*Test*.apk
                app-debug*Test*.aab
                app-release*Test*.aab
            - gradle_task: jacocoTestReport
          title: Run Jacoco
      - gradle-runner@1.9.0:
          inputs:
            - gradle_task: detekt
          title: Run detekt
      - sonarqube-scanner@1.0.6:
          inputs:
            - scanner_properties: |-
                sonar.sources=.
                sonar.organization=soulcramer-github
                sonar.login=365f335263dd3d12babbd983bd4b906db6fe295c
                sonar.java.binaries=app/build/tmp/kotlin-classes,cache/build/tmp/kotlin-classes,core/build/tmp/kotlin-classes,data/build/tmp/kotlin-classes,domain/build/tmp/kotlin-classes,remote/build/tmp/kotlin-classes
                #environment variables are evaluated
                sonar.projectKey=soulcramer_NotifyMoe-Android-App
                sonar.host.url=https://sonarcloud.io
                sonar.report.export.path=sonar-report.json
                sonar.java.coveragePlugin=jacoco
                sonar.sources=app/src/main/java,cache/src/main/java,core/src/main/java,data/src/main/java,domain/src/main/java,remote/src/main/java
                sonar.androidLint.reportPaths=build/reports/lint/lint-report.xml
                sonar.kotlin.detekt.reportPaths= build/reports/detekt.xml

                sonar.coverage.jacoco.xmlReportPaths=app/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml,cache/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml,data/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml,domain/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml,remote/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml
      - deploy-to-bitrise-io: {}
      - cache-push@2.2.0: {}
app:
  envs:
    - opts:
        is_expand: false
      PROJECT_LOCATION: "."
    - opts:
        is_expand: false
      MODULE: app
    - opts:
        is_expand: false
      VARIANT: debug
    - opts:
        is_expand: false
      GRADLEW_PATH: "./gradlew"
